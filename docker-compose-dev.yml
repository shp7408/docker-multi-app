version: '3'
services:
  frontend:
    # 개발 환경을 위한 도커 파일이 위치한 경로를 알려줍니다.
    build: 
      dockerfile: Dockerfile.dev
      context: ./frontend
    # 볼륨을 설정합니다.
    volumes:
      - /app/node_modules
      - ./frontend:/app
    # 리액트 애플리케이션에서 발생하는 버그를 해결합니다.
    stdin_open: true

  nginx:
    restart: always
    build:
      dockerfile: Dockerfile
      context: ./nginx
      ports:
        - "3000:80"

  backend:
    build:
      dockerfile: Dockerfile.dev
      context: ./backend
    container_name: app_backend
    volumes:
      - /app/node_modules
      - ./backend:/app


  mysql:
    build: ./mysql
    restart: unless-stopped
    container_name: app_mysql
    ports:
      - "3306:3306"
    volumes:
      - ./mysql/mysql_data:/var/lib/mysql
      - ./mysql/sqls/:/docker-entrypoint-initdb.d/
    # MySQL의 루트 계정 비밀번호와 데이터베이스의 이름을 지정합니다.
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: myapp
    